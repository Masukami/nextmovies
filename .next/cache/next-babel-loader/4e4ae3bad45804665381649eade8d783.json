{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Suhail\\\\Documents\\\\ReactJS Projects\\\\bjaknext\\\\pages\\\\[id].js\";\nimport React from \"react\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Detail = function Detail(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.images[2].url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.description));\n};\n\nDetail.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, movie, moviesData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://cdn-discover.hooq.tv/v1.2/discover/titles/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            movie = _context.sent;\n            moviesData = movie.data;\n            console.log(\"Fetched movie : \".concat(moviesData.title));\n            console.log(\"Fetched movie : \".concat(moviesData.description));\n            return _context.abrupt(\"return\", moviesData);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Detail;","map":{"version":3,"sources":["C:\\Users\\Suhail\\Documents\\ReactJS Projects\\bjaknext\\pages\\[id].js"],"names":["fetch","Detail","props","images","url","title","description","getInitialProps","context","id","query","res","json","movie","moviesData","data","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACG,KAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACI,WAAV,CAHF,CADkB;AAAA,CAApB;;AAQAL,MAAM,CAACM,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,EADe,GACRD,OAAO,CAACE,KADA,CACfD,EADe;AAAA;AAAA,mBAELT,KAAK,6DACgCS,EADhC,EAFA;;AAAA;AAEjBE,YAAAA,GAFiB;AAAA;AAAA,mBAKHA,GAAG,CAACC,IAAJ,EALG;;AAAA;AAKjBC,YAAAA,KALiB;AAMnBC,YAAAA,UANmB,GAMND,KAAK,CAACE,IANA;AAQvBC,YAAAA,OAAO,CAACC,GAAR,2BAA+BH,UAAU,CAACT,KAA1C;AACAW,YAAAA,OAAO,CAACC,GAAR,2BAA+BH,UAAU,CAACR,WAA1C;AATuB,6CAWhBQ,UAXgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeb,MAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\r\n\r\nconst Detail = props => (\r\n  <div>\r\n    <img src={props.images[2].url} />\r\n    <h1>{props.title}</h1>\r\n    <p>{props.description}</p>\r\n  </div>\r\n);\r\n\r\nDetail.getInitialProps = async function(context) {\r\n  const { id } = context.query;\r\n  const res = await fetch(\r\n    `https://cdn-discover.hooq.tv/v1.2/discover/titles/${id}`\r\n  );\r\n  const movie = await res.json();\r\n  var moviesData = movie.data;\r\n\r\n  console.log(`Fetched movie : ${moviesData.title}`);\r\n  console.log(`Fetched movie : ${moviesData.description}`);\r\n\r\n  return moviesData;\r\n};\r\n\r\nexport default Detail;\r\n"]},"metadata":{},"sourceType":"module"}