{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Suhail\\\\Documents\\\\ReactJS Projects\\\\bjaknext\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport Head from \"next/head\";\nimport ErrorPage from \"../components/error\";\nimport Movie from \"../components/movie\";\nimport { getMovies } from \"../services/apihandler\";\n\nvar Index = function Index(_ref) {\n  var moviesData = _ref.moviesData,\n      error = _ref.error;\n  return React.createElement(\"div\", {\n    className: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Bjak NextJS\")), error ? React.createElement(ErrorPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }) : moviesData.map(function (movie) {\n    return React.createElement(Movie, _extends({}, movie.data, {\n      key: movie.row_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  }) // moviesData.map(movie => {\n  //   console.log(movie.data);\n  //   const movieDataArray = Array.from(movie.data);\n  //   return <Movie {...movieDataArray} key={movie.row_id} />;\n  // })\n  );\n};\n/* {props.moviesData.map(movie =>\r\n      movie.title == \"Multi-Title-Manual-Curation\" ? (\r\n        <div className=\"movie\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"card-title h3 text-primary\">{movie.row_name}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null\r\n    )} */\n//   }\n//   </div>\n//     <div>\n//       <h1>Bjak Movies</h1>\n//       <ul>\n//         {props.moviesData.map(movie =>\n//           movie.type == \"Multi-Title-Manual-Curation\" ? (\n//               <li>\n//                 <h2>{movie.row_name}</h2>\n//                 {movie.data.map(movieData => (\n//                   <div className={\"item\"} key={movieData.id}>\n//                     <Link href=\"/[id]\" as={`/${movieData.id}`}>\n//                       <img src={movieData.images[0].url} />\n//                     </Link>\n//                     <span className={\"caption\"}>{movieData.title}</span>\n//                     <span className={\"caption\"}>{movieData.short_description}</span>\n//                   </div>\n//                 ))}\n//               </li>\n//           ) : null\n//         )}\n//       </ul>\n//       <style jsx>{`\n//         .item {\n//           vertical-align: top;\n//           display: inline-block;\n//           text-align: center;\n//           padding: 2em;\n//         }\n//         .caption {\n//           display: block;\n//           font-weight: bold;\n//         }\n//       `}</style>\n//     </div>\n// );\n\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, moviesArray;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return getMovies();\n\n        case 2:\n          res = _context.sent;\n\n          if (!res.error) {\n            _context.next = 5;\n            break;\n          }\n\n          return _context.abrupt(\"return\", res);\n\n        case 5:\n          moviesArray = _Array$from(res.data);\n          return _context.abrupt(\"return\", {\n            moviesData: moviesArray.map(function (entry) {\n              return entry;\n            })\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\Suhail\\Documents\\ReactJS Projects\\bjaknext\\pages\\index.js"],"names":["Head","ErrorPage","Movie","getMovies","Index","moviesData","error","map","movie","data","row_id","getInitialProps","res","moviesArray","entry"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,MAAeC,KAAf,QAAeA,KAAf;AAAA,SACZ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,EAIGA,KAAK,GACJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,GAGJD,UAAU,CAACE,GAAX,CAAe,UAAAC,KAAK,EAAI;AACtB,WAAO,oBAAC,KAAD,eAAWA,KAAK,CAACC,IAAjB;AAAuB,MAAA,GAAG,EAAED,KAAK,CAACE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFD,CAHI,CAOJ;AACA;AACA;AACA;AACA;AAfJ,GADY;AAAA,CAAd;AAoBA;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAN,KAAK,CAACO,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJR,SAAS,EADL;;AAAA;AAChBS,UAAAA,GADgB;;AAAA,eAElBA,GAAG,CAACN,KAFc;AAAA;AAAA;AAAA;;AAAA,2CAEAM,GAFA;;AAAA;AAIhBC,UAAAA,WAJgB,GAIF,YAAWD,GAAG,CAACH,IAAf,CAJE;AAAA,2CAMf;AACLJ,YAAAA,UAAU,EAAEQ,WAAW,CAACN,GAAZ,CAAgB,UAAAO,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAArB;AADP,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAeV,KAAf","sourcesContent":["import Head from \"next/head\";\r\nimport ErrorPage from \"../components/error\";\r\nimport Movie from \"../components/movie\";\r\nimport { getMovies } from \"../services/apihandler\";\r\n\r\nconst Index = ({ moviesData, error }) => (\r\n  <div className=\"home\">\r\n    <Head>\r\n      <title>Bjak NextJS</title>\r\n    </Head>\r\n    {error ? (\r\n      <ErrorPage />\r\n    ) : (\r\n      moviesData.map(movie => {\r\n        return <Movie {...movie.data} key={movie.row_id} />;\r\n      })\r\n\r\n      // moviesData.map(movie => {\r\n      //   console.log(movie.data);\r\n      //   const movieDataArray = Array.from(movie.data);\r\n      //   return <Movie {...movieDataArray} key={movie.row_id} />;\r\n      // })\r\n    )}\r\n  </div>\r\n);\r\n/* {props.moviesData.map(movie =>\r\n      movie.title == \"Multi-Title-Manual-Curation\" ? (\r\n        <div className=\"movie\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"card-title h3 text-primary\">{movie.row_name}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null\r\n    )} */\r\n//   }\r\n//   </div>\r\n//     <div>\r\n//       <h1>Bjak Movies</h1>\r\n//       <ul>\r\n//         {props.moviesData.map(movie =>\r\n//           movie.type == \"Multi-Title-Manual-Curation\" ? (\r\n//               <li>\r\n//                 <h2>{movie.row_name}</h2>\r\n//                 {movie.data.map(movieData => (\r\n//                   <div className={\"item\"} key={movieData.id}>\r\n//                     <Link href=\"/[id]\" as={`/${movieData.id}`}>\r\n//                       <img src={movieData.images[0].url} />\r\n//                     </Link>\r\n//                     <span className={\"caption\"}>{movieData.title}</span>\r\n//                     <span className={\"caption\"}>{movieData.short_description}</span>\r\n//                   </div>\r\n//                 ))}\r\n//               </li>\r\n//           ) : null\r\n//         )}\r\n//       </ul>\r\n//       <style jsx>{`\r\n//         .item {\r\n//           vertical-align: top;\r\n//           display: inline-block;\r\n//           text-align: center;\r\n//           padding: 2em;\r\n//         }\r\n//         .caption {\r\n//           display: block;\r\n//           font-weight: bold;\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n// );\r\n\r\nIndex.getInitialProps = async () => {\r\n  const res = await getMovies();\r\n  if (res.error) return res;\r\n\r\n  const moviesArray = Array.from(res.data);\r\n\r\n  return {\r\n    moviesData: moviesArray.map(entry => entry)\r\n  };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}