{"ast":null,"code":"import _Array$from from \"@babel/runtime-corejs2/core-js/array/from\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Suhail\\\\Documents\\\\ReactJS Projects\\\\bjaknext\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport Head from \"next/head\";\nimport ErrorPage from \"../components/error\";\nimport Movie from \"../components/movie\";\nimport { getMovies } from \"../services/apihandler\";\n\nconst Index = ({\n  moviesData,\n  error\n}) => React.createElement(\"div\", {\n  className: \"home\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, React.createElement(Head, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"title\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"Bjak NextJS\")), error ? React.createElement(ErrorPage, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}) : moviesData.map(movie => {\n  return React.createElement(Movie, _extends({}, movie.data, {\n    key: movie.row_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n}) // moviesData.map(movie => {\n//   console.log(movie.data);\n//   const movieDataArray = Array.from(movie.data);\n//   return <Movie {...movieDataArray} key={movie.row_id} />;\n// })\n);\n/* {props.moviesData.map(movie =>\r\n      movie.title == \"Multi-Title-Manual-Curation\" ? (\r\n        <div className=\"movie\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"card-title h3 text-primary\">{movie.row_name}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null\r\n    )} */\n//   }\n//   </div>\n//     <div>\n//       <h1>Bjak Movies</h1>\n//       <ul>\n//         {props.moviesData.map(movie =>\n//           movie.type == \"Multi-Title-Manual-Curation\" ? (\n//               <li>\n//                 <h2>{movie.row_name}</h2>\n//                 {movie.data.map(movieData => (\n//                   <div className={\"item\"} key={movieData.id}>\n//                     <Link href=\"/[id]\" as={`/${movieData.id}`}>\n//                       <img src={movieData.images[0].url} />\n//                     </Link>\n//                     <span className={\"caption\"}>{movieData.title}</span>\n//                     <span className={\"caption\"}>{movieData.short_description}</span>\n//                   </div>\n//                 ))}\n//               </li>\n//           ) : null\n//         )}\n//       </ul>\n//       <style jsx>{`\n//         .item {\n//           vertical-align: top;\n//           display: inline-block;\n//           text-align: center;\n//           padding: 2em;\n//         }\n//         .caption {\n//           display: block;\n//           font-weight: bold;\n//         }\n//       `}</style>\n//     </div>\n// );\n\n\nIndex.getInitialProps = async () => {\n  const res = await getMovies();\n  if (res.error) return res;\n\n  const moviesArray = _Array$from(res.data);\n\n  return {\n    moviesData: moviesArray.map(entry => entry)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\Suhail\\Documents\\ReactJS Projects\\bjaknext\\pages\\index.js"],"names":["Head","ErrorPage","Movie","getMovies","Index","moviesData","error","map","movie","data","row_id","getInitialProps","res","moviesArray","entry"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KACZ;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIGA,KAAK,GACJ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADI,GAGJD,UAAU,CAACE,GAAX,CAAeC,KAAK,IAAI;AACtB,SAAO,oBAAC,KAAD,eAAWA,KAAK,CAACC,IAAjB;AAAuB,IAAA,GAAG,EAAED,KAAK,CAACE,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFD,CAHI,CAOJ;AACA;AACA;AACA;AACA;AAfJ,CADF;AAoBA;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAN,KAAK,CAACO,eAAN,GAAwB,YAAY;AAClC,QAAMC,GAAG,GAAG,MAAMT,SAAS,EAA3B;AACA,MAAIS,GAAG,CAACN,KAAR,EAAe,OAAOM,GAAP;;AAEf,QAAMC,WAAW,GAAG,YAAWD,GAAG,CAACH,IAAf,CAApB;;AAEA,SAAO;AACLJ,IAAAA,UAAU,EAAEQ,WAAW,CAACN,GAAZ,CAAgBO,KAAK,IAAIA,KAAzB;AADP,GAAP;AAGD,CATD;;AAWA,eAAeV,KAAf","sourcesContent":["import Head from \"next/head\";\r\nimport ErrorPage from \"../components/error\";\r\nimport Movie from \"../components/movie\";\r\nimport { getMovies } from \"../services/apihandler\";\r\n\r\nconst Index = ({ moviesData, error }) => (\r\n  <div className=\"home\">\r\n    <Head>\r\n      <title>Bjak NextJS</title>\r\n    </Head>\r\n    {error ? (\r\n      <ErrorPage />\r\n    ) : (\r\n      moviesData.map(movie => {\r\n        return <Movie {...movie.data} key={movie.row_id} />;\r\n      })\r\n\r\n      // moviesData.map(movie => {\r\n      //   console.log(movie.data);\r\n      //   const movieDataArray = Array.from(movie.data);\r\n      //   return <Movie {...movieDataArray} key={movie.row_id} />;\r\n      // })\r\n    )}\r\n  </div>\r\n);\r\n/* {props.moviesData.map(movie =>\r\n      movie.title == \"Multi-Title-Manual-Curation\" ? (\r\n        <div className=\"movie\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <div className=\"card-title h3 text-primary\">{movie.row_name}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null\r\n    )} */\r\n//   }\r\n//   </div>\r\n//     <div>\r\n//       <h1>Bjak Movies</h1>\r\n//       <ul>\r\n//         {props.moviesData.map(movie =>\r\n//           movie.type == \"Multi-Title-Manual-Curation\" ? (\r\n//               <li>\r\n//                 <h2>{movie.row_name}</h2>\r\n//                 {movie.data.map(movieData => (\r\n//                   <div className={\"item\"} key={movieData.id}>\r\n//                     <Link href=\"/[id]\" as={`/${movieData.id}`}>\r\n//                       <img src={movieData.images[0].url} />\r\n//                     </Link>\r\n//                     <span className={\"caption\"}>{movieData.title}</span>\r\n//                     <span className={\"caption\"}>{movieData.short_description}</span>\r\n//                   </div>\r\n//                 ))}\r\n//               </li>\r\n//           ) : null\r\n//         )}\r\n//       </ul>\r\n//       <style jsx>{`\r\n//         .item {\r\n//           vertical-align: top;\r\n//           display: inline-block;\r\n//           text-align: center;\r\n//           padding: 2em;\r\n//         }\r\n//         .caption {\r\n//           display: block;\r\n//           font-weight: bold;\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n// );\r\n\r\nIndex.getInitialProps = async () => {\r\n  const res = await getMovies();\r\n  if (res.error) return res;\r\n\r\n  const moviesArray = Array.from(res.data);\r\n\r\n  return {\r\n    moviesData: moviesArray.map(entry => entry)\r\n  };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}